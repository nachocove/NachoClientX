// This file has been autogenerated from a class added in the UI designer.

using System;

using CoreGraphics;
using Foundation;
using UIKit;

using NachoCore.Model;
using NachoCore.Utils;

namespace NachoClient.iOS
{
    public partial class AdvancedSettingsViewController : NcUIViewControllerNoLeaks
	{
        McAccount account;
        ILoginFields loginFields;

		public AdvancedSettingsViewController (IntPtr handle) : base (handle)
		{
		}

        public void Setup(McAccount account) {
            this.account = account;
        }

        protected override void CreateViewHierarchy ()
        {
            NavigationItem.Title = NcServiceHelper.AccountServiceName (account.AccountService);
                
            var rect = new CGRect (0, 0, View.Frame.Width, View.Frame.Height);
            switch (account.AccountType) {
            case McAccount.AccountTypeEnum.Exchange:
                loginFields = new ExchangeFields (account, LoginProtocolControl.Prompt.EditInfo, rect, onConnect);
                break;
            case McAccount.AccountTypeEnum.IMAP_SMTP:
                loginFields = new IMapFields (account, LoginProtocolControl.Prompt.EditInfo, rect, onConnect);
                break;
            default:
                NcAssert.CaseError ();
                break;
            }
            View.AddSubview (loginFields.View);
        }

        protected override void ConfigureAndLayout ()
        {
        }

        protected override void Cleanup ()
        {
        }

        void onConnect (AdvancedLoginViewController.ConnectCallbackStatusEnum connect, McAccount account, string email, string password)
        {
            View.EndEditing (true);
        }

        public override bool HidesBottomBarWhenPushed {
            get {
                return this.NavigationController.TopViewController == this;
            }
        }

        protected override void OnKeyboardChanged ()
        {
            if (null != loginFields) {
                loginFields.Layout (View.Frame.Height - keyboardHeight);
            }
        }
	}
}

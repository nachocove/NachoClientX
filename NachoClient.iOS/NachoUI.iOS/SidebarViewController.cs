// This file has been autogenerated from a class added in the UI designer.

using System;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using SWRevealViewControllerBinding;

namespace NachoClient.iOS
{
    public partial class SidebarViewController : UITableViewController
    {
        protected string[] tableItems = {
            "SidebarToAccounts",
            "SidebarToCalendar",
            "SidebarToContacts",
            "SidebarToFolders",
            "SidebarToSettings",
        };

        public SidebarViewController (IntPtr handle) : base (handle)
        {
        }

        public override void PrepareForSegue (UIStoryboardSegue segue, NSObject sender)
        {
            Console.WriteLine ("PrepareForSegue: {0}", segue.Identifier);

            NSIndexPath indexPath = this.TableView.IndexPathForSelectedRow;
            UIViewController destViewController = (UIViewController)segue.DestinationViewController;
            destViewController.Title = tableItems [indexPath.Row];

            if (segue.GetType () == typeof(SWRevealViewControllerSegue)) {
                Console.WriteLine ("PrepareForSqueue: SWRevealViewControllerSegue");
                SWRevealViewControllerSegue swSegue = (SWRevealViewControllerSegue)segue;
                swSegue.PerformBlock = PerformBlock;
            }
        }

        public void PerformBlock (SWRevealViewControllerSegue s, UIViewController svc, UIViewController dvc)
        {
            Console.WriteLine ("PrepareForSegue: PerformBlock");
            UINavigationController navController = (UINavigationController)this.RevealViewController ().FrontViewController;
            navController.SetViewControllers (new UIViewController[] { dvc }, true);
            this.RevealViewController ().SetFrontViewPosition (FrontViewPosition.Left, true);
        }

        /// <summary>
        /// Called by the TableView to determine how many sections(groups) there are.
        /// </summary>
        public override int NumberOfSections (UITableView tableView)
        {
            return 1;
        }

        /// <summary>
        /// Called by the TableView to determine how many cells to create for that particular section.
        /// </summary>
        public override int RowsInSection (UITableView tableview, int section)
        {
            return tableItems.Length;
        }
        //        /// <summary>
        //        /// Called when a row is touched
        //        /// </summary>
        //        public override void RowSelected (UITableView tableView, NSIndexPath indexPath)
        //        {
        //            Console.WriteLine ("Selected row {0}", indexPath);
        //        }
        /// <summary>
        /// Called by the TableView to get the actual UITableViewCell to render for the particular row
        /// </summary>
        public override UITableViewCell GetCell (UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath)
        {
            string cellID = tableItems [indexPath.Row];

            UITableViewCell cell = tableView.DequeueReusableCell (cellID);

            //---- if there are no cells to reuse, create a new one
            if (cell == null) {
                cell = new UITableViewCell (UITableViewCellStyle.Default, cellID);
            }

            cell.TextLabel.Text = cellID;

            return cell;
        }
    }
}

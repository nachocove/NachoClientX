// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;

using System.IO;
using CoreGraphics;
using System.Collections.Generic;
using System.Linq;

using NachoCore.Utils;
using NachoCore.Model;

namespace NachoClient.iOS
{
    public partial class NotesViewController : NcUIViewController, INachoNotesController
    {
        public NotesViewController (IntPtr handle) : base (handle)
        {
        }

        protected INachoNotesControllerParent Owner;
        protected bool SupressAutoDate;
        protected McAccount account;
        UIColor separatorColor = A.Color_NachoBorderGray;
        protected static nfloat SCREEN_WIDTH = UIScreen.MainScreen.Bounds.Width;
        protected static nfloat LINE_OFFSET = 30f;
        protected static nfloat KEYBOARD_HEIGHT = 216f;
        protected static nfloat NOTES_TEXT_VIEW_HEIGHT = UIScreen.MainScreen.Bounds.Height - KEYBOARD_HEIGHT - LINE_OFFSET - 10;
        protected static nfloat TEXT_LINE_HEIGHT = 19.124f;
        protected nfloat NOTES_OFFSET = 0f;
        protected nfloat keyboardHeight;

        protected string originalNote;
        protected string embeddedDateString;

        UIColor solidTextColor = A.Color_NachoBlack;

        protected int DATE_DETAIL_TAG = 100;

        protected UIView notesView;
        protected UITextView notesTextView;

        protected UIView line1;
        protected UIView line2;

        public override void ViewDidLoad ()
        {
            base.ViewDidLoad ();
            account = NcModel.Instance.Db.Table<McAccount> ().Where (x => x.AccountType == McAccount.AccountTypeEnum.Exchange).FirstOrDefault ();
            CreateNotesView ();
            notesTextView.BecomeFirstResponder ();
        }

        public override void ViewWillAppear (bool animated)
        {
            base.ViewWillAppear (animated);
            if (null != this.NavigationController) {
                this.NavigationController.ToolbarHidden = true;
            }

            originalNote = Owner.GetNoteText ();
            embeddedDateString = DateTime.Now.ToShortDateString () + "\n" + "\n" + "\n";
            ConfigureNotesView ();
        }

        public override void ViewDidAppear (bool animated)
        {
            base.ViewDidAppear (animated);
        }

        public override bool HidesBottomBarWhenPushed {
            get {
                return this.NavigationController.TopViewController == this;
            }
        }

        public override void ViewWillDisappear (bool animated)
        {
            base.ViewWillDisappear (animated);

            if (SupressAutoDate) {
                Owner.SaveNote (account.Id, notesTextView.Text);
            } else {
                if ((embeddedDateString + originalNote) != notesTextView.Text) {
                    Owner.SaveNote (account.Id, notesTextView.Text);
                }
            }
        }

        public void SetOwner (INachoNotesControllerParent owner, bool supressAutoDate)
        {
            this.Owner = owner;
            this.SupressAutoDate = supressAutoDate;
        }

        protected void CreateNotesView ()
        {
            NavigationItem.Title = "Note";
            Util.SetBackButton (NavigationController, NavigationItem, A.Color_NachoBlue);
             
            scrollView.Frame = new CGRect (0, 0, SCREEN_WIDTH, View.Frame.Height - KEYBOARD_HEIGHT);
            //notes
            notesView = new UIView (new CGRect (0, LINE_OFFSET + 10, SCREEN_WIDTH, NOTES_TEXT_VIEW_HEIGHT + 200));
            notesView.BackgroundColor = UIColor.White;
            notesTextView = new UITextView (new CGRect (15, 15, SCREEN_WIDTH - 30, NOTES_TEXT_VIEW_HEIGHT));
            notesTextView.Font = A.Font_AvenirNextRegular14;
            notesTextView.TextColor = solidTextColor;
            notesTextView.BackgroundColor = UIColor.White;
            var beginningRange = new NSRange (0, 0);
            notesTextView.SelectedRange = beginningRange;

            notesTextView.Changed += (object sender, EventArgs e) => {
                NotesSelectionChanged (notesTextView);
            };
            notesView.Add (notesTextView);
            line1 = AddLine (0, LINE_OFFSET + 10, SCREEN_WIDTH, separatorColor);

            //Content View
            contentView.BackgroundColor = UIColor.White;

            var DateView = new UIView (new CGRect (0, 0, SCREEN_WIDTH, LINE_OFFSET + 10));
            DateView.BackgroundColor = A.Color_NachoNowBackground;
            MakeDateLabel (0, LINE_OFFSET - 10, SCREEN_WIDTH, 15, DATE_DETAIL_TAG, DateView);
            contentView.Add (DateView);
            contentView.Add (notesView);
            contentView.Add (line1);
            contentView.Frame = new CGRect (0, 0, SCREEN_WIDTH, NOTES_TEXT_VIEW_HEIGHT + LINE_OFFSET + 10);

            //Scroll View
            scrollView.BackgroundColor = A.Color_NachoNowBackground;
            scrollView.ContentSize = contentView.Frame.Size;

        }

        public UIView AddLine (nfloat offset, nfloat yVal, nfloat width, UIColor color)
        {
            var lineUIView = new UIView (new CGRect (offset, yVal, width, .5f));
            lineUIView.BackgroundColor = color;
            return (lineUIView);
        }

        public void ConfigureNotesView ()
        {
            if (SupressAutoDate) {
                notesTextView.Text = Owner.GetNoteText ();
            } else {
                notesTextView.Text = embeddedDateString + Owner.GetNoteText ();
                notesTextView.SelectedRange = new NSRange (DateTime.Now.ToShortDateString ().Length + 1, 0);
            }

            //date
            var dateDetailLabel = contentView.ViewWithTag (DATE_DETAIL_TAG) as UILabel;
            dateDetailLabel.Text = Pretty.ExtendedDateString (DateTime.UtcNow);
        }

        public void MakeDateLabel (nfloat xOffset, nfloat yOffset, nfloat width, nfloat height, int tag, UIView parentView)
        {
            UILabel DateLabel = new UILabel (new CGRect (xOffset, yOffset, width, height));
            DateLabel.Font = A.Font_AvenirNextRegular12;
            DateLabel.TextColor = UIColor.LightGray;
            DateLabel.Tag = tag;
            DateLabel.TextAlignment = UITextAlignment.Center;
            parentView.Add (DateLabel);
        }

        protected void NotesSelectionChanged (UITextView textView)
        {
            // We want to scroll the caret rect into view
            var caretRect = textView.GetCaretRectForPosition (textView.SelectedTextRange.End);
            caretRect.Size = new CGSize (caretRect.Size.Width, caretRect.Size.Height + textView.TextContainerInset.Bottom);
            // Make sure our textview is big enough to hold the text
            var frame = textView.Frame;
            frame.Size = new CGSize (textView.ContentSize.Width, textView.ContentSize.Height);
            textView.Frame = frame;
            var newNotesViewFrame = notesView.Frame;
            newNotesViewFrame.Size = new CGSize (notesView.Frame.Width, textView.ContentSize.Height + 250);
            notesView.Frame = newNotesViewFrame;
            // And update our enclosing scrollview for the new content size
            scrollView.ContentSize = new CGSize (scrollView.ContentSize.Width, textView.Frame.Height + notesView.Frame.Y + 30);
            // Adjust the caretRect to be in our enclosing scrollview, and then scroll it
            caretRect.Y += notesView.Frame.Y + 30;
            scrollView.ScrollRectToVisible (caretRect, true);
        }
    }
}


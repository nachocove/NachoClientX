// This file has been autogenerated from a class added in the UI designer.

using System;
using CoreGraphics;
using Foundation;
using UIKit;

namespace NachoClient.iOS
{
    public partial class NotesViewController : NcUIViewControllerNoLeaks, INachoNotesController
    {
        public NotesViewController (IntPtr handle)
            : base (handle)
        {
        }

        private INachoNotesControllerParent owner;
        private string itemTitle;
        private bool insertDate;
        private string unmodifiedText;

        private NcTextView textView;

        private static nfloat HORIZONTAL_MARGIN = 15f;
        private static nfloat VERTICAL_MARGIN = 15f;

        public void SetOwner (INachoNotesControllerParent owner, string title, bool insertDate)
        {
            this.owner = owner;
            this.itemTitle = title;
            this.insertDate = insertDate;
        }

        protected override void CreateViewHierarchy ()
        {
            textView = new NcTextView (new CGRect (HORIZONTAL_MARGIN, 0, View.Frame.Width - (2 * HORIZONTAL_MARGIN), View.Frame.Height));
            textView.Font = A.Font_AvenirNextRegular14;
            textView.TextColor = A.Color_NachoBlack;
            textView.BackgroundColor = UIColor.White;
            textView.ContentInset = new UIEdgeInsets (VERTICAL_MARGIN, 0, VERTICAL_MARGIN, 0);
            textView.SelectionChanged += SelectionChangedHandler;
            View.AddSubview (textView);
        }

        protected override void ConfigureAndLayout ()
        {
            if (insertDate) {
                string dateString = DateTime.Now.ToShortDateString ();
                unmodifiedText = dateString + "\n\n\n" + owner.GetNoteText ();
                textView.Text = unmodifiedText;
                textView.SelectedRange = new NSRange (dateString.Length + 1, 0);
            } else {
                unmodifiedText = owner.GetNoteText ();
                textView.Text = unmodifiedText;
                textView.SelectedRange = new NSRange (0, 0);
            }
            textView.BecomeFirstResponder ();

            Layout ();
        }

        protected override void Cleanup ()
        {
            textView.SelectionChanged -= SelectionChangedHandler;
            textView = null;
        }

        protected override void OnKeyboardChanged ()
        {
            Layout ();
            MakeCaretVisible (false);
        }

        private void Layout ()
        {
            ViewFramer.Create (textView).Height (View.Frame.Height - keyboardHeight);
        }

        public override void ViewDidLoad ()
        {
            base.ViewDidLoad ();
            if (string.IsNullOrEmpty (itemTitle)) {
                NavigationItem.Title = "Note";
            } else {
                NavigationItem.Title = string.Format ("Note: {0}", itemTitle);
            }
            Util.SetBackButton (NavigationController, NavigationItem, A.Color_NachoBlue);
        }

        public override void ViewWillAppear (bool animated)
        {
            base.ViewWillAppear (animated);
            if (null != this.NavigationController) {
                this.NavigationController.ToolbarHidden = true;
            }
        }

        public override void ViewWillDisappear (bool animated)
        {
            base.ViewWillDisappear (animated);
            if (textView.Text != unmodifiedText) {
                owner.SaveNote (textView.Text);
            }
        }

        public override bool HidesBottomBarWhenPushed
        {
            get {
                return this.NavigationController.TopViewController == this;
            }
        }

        private void MakeCaretVisible (bool animated)
        {
            var caretFrame = textView.GetCaretRectForPosition (textView.SelectedTextRange.End);
            textView.ScrollRectToVisible (caretFrame, animated);
        }

        private void SelectionChangedHandler (object sender, EventArgs args)
        {
            MakeCaretVisible (true);
        }
    }
}

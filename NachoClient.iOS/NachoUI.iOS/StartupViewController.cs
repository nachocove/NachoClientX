// This file has been autogenerated from a class added in the UI designer.

using System;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using SWRevealViewControllerBinding;
using NachoCore;
using NachoCore.Model;
using NachoCore.Utils;

namespace NachoClient.iOS
{
    public partial class StartupViewController : NcUIViewController
    {
        bool hasSynced;
        bool hasCreds;
        bool hasViewedTutorial;
        int accountId;

        public StartupViewController (IntPtr handle) : base (handle)
        {
        }

        /// <summary>
        /// On first run, push the modal LaunchViewController to get credentials.
        /// </summary>
        public override void ViewDidLoad ()
        {
            base.ViewDidLoad ();

            // Navigation
            revealButton.Action = new MonoTouch.ObjCRuntime.Selector ("revealToggle:");
            revealButton.Target = this.RevealViewController ();

            if (LoginHelpers.IsCurrentAccountSet ()) {
                accountId = LoginHelpers.GetCurrentAccountId ();
                hasSynced = LoginHelpers.HasFirstSyncCompleted (accountId);
                hasCreds = LoginHelpers.HasProvidedCreds (accountId);
                hasViewedTutorial = LoginHelpers.HasViewedTutorial (accountId);
            } else {
                hasSynced = false;
                hasCreds = false;
                hasViewedTutorial = false;
            }

            if (!hasCreds) {
                PerformSegue ("StartupToLaunch", this); // modal
                PerformSegue ("StartupToHome", this);  // launch the documentation
            } else if (!hasViewedTutorial) {
                PerformSegue ("StartupToHome", this);
            } else if (!hasSynced) {
                PerformSegue ("StartupToAdvancedLogin", this);
            } else {
                PerformSegue ("StartupToNachoNow", this); // push
            }
        }

        public override void ViewWillAppear (bool animated)
        {
            base.ViewWillAppear (animated);
            if (null != this.NavigationController) {
                this.NavigationController.ToolbarHidden = true;
            }
        }

    }
}
    
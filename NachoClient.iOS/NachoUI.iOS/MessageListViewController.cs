// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Drawing;
using MonoTouch.Foundation;

//using MonoTouch.CoreGraphics;
using MonoTouch.UIKit;
using NachoCore.Model;
using NachoCore.Utils;
using NachoCore;
using MCSwipeTableViewCellBinding;
using SWRevealViewControllerBinding;

namespace NachoClient.iOS
{
    public partial class MessageListViewController : UITableViewController, IUITableViewDelegate
    {
        McFolder folder;
        INachoEmailMessages messages;

        public void SetFolder (McFolder f)
        {
            folder = f;
        }

        public MessageListViewController (IntPtr handle) : base (handle)
        {
        }

        public override void ViewDidLoad ()
        {
            base.ViewDidLoad ();

            // Navigation
            revealButton.Action = new MonoTouch.ObjCRuntime.Selector ("revealToggle:");
            revealButton.Target = this.RevealViewController ();
            this.View.AddGestureRecognizer (this.RevealViewController ().PanGestureRecognizer);

            UIView backgroundView = new UIView (new RectangleF (0, 0, 320, 480));
            backgroundView.BackgroundColor = new UIColor (227f / 255f, 227f / 255f, 227f / 255f, 1.0f);
            this.TableView.BackgroundView = backgroundView;  
        }

        public override void ViewWillAppear (bool animated)
        {
            base.ViewWillAppear (animated);

            messages = new NachoEmailMessages (folder);
            TableView.ReloadData ();
        }

        public override void PrepareForSegue (UIStoryboardSegue segue, NSObject sender)
        {
            if (segue.Identifier == "MessagesToRead") {
                var vc = (ReadMessageViewController)segue.DestinationViewController;
                vc.messages = new NachoEmailMessages (folder);
                vc.messageIndex = TableView.IndexPathForSelectedRow.Row;
            }
        }

        public override int NumberOfSections (UITableView tableView)
        {
            return 1;
        }

        public override int RowsInSection (UITableView tableview, int section)
        {
            return messages.Count ();
        }

        public override void RowSelected (UITableView tableView, NSIndexPath indexPath)
        {
            PerformSegue ("MessagesToRead", indexPath);
        }

        public override UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath)
        {
            const string CellIdentifier = "Cell";

            NachoSwipeTableViewCell cell = (NachoSwipeTableViewCell)tableView.DequeueReusableCell (CellIdentifier);

            if (null == cell) {
                cell = new NachoSwipeTableViewCell (UITableViewCellStyle.Subtitle, CellIdentifier);

                if (cell.RespondsToSelector (new MonoTouch.ObjCRuntime.Selector ("setSeparatorInset:"))) {
                    cell.SeparatorInset = UIEdgeInsets.Zero;
                }
                cell.SelectionStyle = UITableViewCellSelectionStyle.None;
                cell.ContentView.BackgroundColor = UIColor.White;
            }
            ConfigureCell (cell, indexPath);

            var message = messages.GetEmailMessage (indexPath.Row);
            var sender = message.From;
            var subject = message.Subject;
            if (null == message.Summary) {
                UpdateDbWithSummary (message);
            }
            NachoAssert.True (null != message.Summary);
            var summary = message.Summary;
            var date = message.DateReceived;
            var icon = (message.IsRead ? NachoMessageIcon.Read : NachoMessageIcon.None);
            var isRead = message.IsRead;

            cell.Update (sender, summary, subject, date, icon, 0);

            return cell;
        }

        void UpdateDbWithSummary (McEmailMessage message)
        {
            var body = message.GetBody (BackEnd.Instance.Db);
            var summary = MimeHelpers.CreateSummary (body);
            message.Summary = summary;
            BackEnd.Instance.Db.Update (message);
        }

        public override float GetHeightForRow (UITableView tableView, NSIndexPath indexPath)
        {
            return 78.0f;
        }

        void ConfigureCell (NachoSwipeTableViewCell cell, NSIndexPath indexPath)
        {

            // Setting the default inactive state color to the tableView background color
            cell.DefaultColor = TableView.BackgroundView.BackgroundColor;

//            cell.Delegate = this;

            UIView checkView = null;
            UIColor greenColor = null;
            UIView crossView = null;
            UIColor redColor = null;
            UIView clockView = null;
            UIColor yellowColor = null;
            UIView listView = null;
            UIColor brownColor = null;

            try { 
                checkView = ViewWithImageName ("check");
                greenColor = new UIColor (85.0f / 255.0f, 213.0f / 255.0f, 80.0f / 255.0f, 1.0f);
                cell.SetSwipeGestureWithView (checkView, greenColor, MCSwipeTableViewCellMode.Switch, MCSwipeTableViewCellState.State1, delegate(MCSwipeTableViewCell c, MCSwipeTableViewCellState state, MCSwipeTableViewCellMode mode) {
                    Console.WriteLine ("Did swipe Checkmark cell");
                });
                crossView = ViewWithImageName ("cross");
                redColor = new UIColor (232.0f / 255.0f, 61.0f / 255.0f, 14.0f / 255.0f, 1.0f);
                cell.SetSwipeGestureWithView (crossView, redColor, MCSwipeTableViewCellMode.Switch, MCSwipeTableViewCellState.State2, delegate(MCSwipeTableViewCell c, MCSwipeTableViewCellState state, MCSwipeTableViewCellMode mode) {
                    Console.WriteLine ("Did swipe Cross cell");
                });
                clockView = ViewWithImageName ("clock");
                yellowColor = new UIColor (254.0f / 255.0f, 217.0f / 255.0f, 56.0f / 255.0f, 1.0f);
                cell.SetSwipeGestureWithView (clockView, yellowColor, MCSwipeTableViewCellMode.Switch, MCSwipeTableViewCellState.State3, delegate(MCSwipeTableViewCell c, MCSwipeTableViewCellState state, MCSwipeTableViewCellMode mode) {
                    Console.WriteLine ("Did swipe Clock cell");
                });
                listView = ViewWithImageName ("list");
                brownColor = new UIColor (206.0f / 255.0f, 149.0f / 255.0f, 98.0f / 255.0f, 1.0f);
                cell.SetSwipeGestureWithView (listView, brownColor, MCSwipeTableViewCellMode.Switch, MCSwipeTableViewCellState.State4, delegate(MCSwipeTableViewCell c, MCSwipeTableViewCellState state, MCSwipeTableViewCellMode mode) {
                    Console.WriteLine ("Did swipe List cell");
                });
            } finally {
                if (null != checkView) {
                    checkView.Dispose ();
                }
                if (null != greenColor) {
                    greenColor.Dispose ();
                }
                if (null != crossView) {
                    crossView.Dispose ();
                }
                if (null != redColor) {
                    redColor.Dispose ();
                }
                if (null != clockView) {
                    clockView.Dispose ();
                }
                if (null != yellowColor) {
                    yellowColor.Dispose ();
                }
                if (null != listView) {
                    listView.Dispose ();
                }
                if (null != brownColor) {
                    brownColor.Dispose ();
                }
            }
        }

        UIView ViewWithImageName (string imageName)
        {
            var image = UIImage.FromBundle (imageName);
            var imageView = new UIImageView (image);
            imageView.ContentMode = UIViewContentMode.Center;
            return imageView;
        }
    }
}
 
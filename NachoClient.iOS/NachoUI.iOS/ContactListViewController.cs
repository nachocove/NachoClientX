// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Drawing;
using System.Collections.Generic;
using System.Linq;

using MonoTouch.Foundation;
using MonoTouch.UIKit;

using NachoCore;
using NachoCore.Utils;
using NachoCore.Model;
using SwipeViewBinding;

namespace NachoClient.iOS
{

    public partial class ContactListViewController : NcUIViewController, IContactsTableViewSourceDelegate
    {
        SwipeView swipeView;
        UITableView TableView;

        ContactsTableViewSource contactTableViewSource;

        public ContactListViewController (IntPtr handle) : base (handle)
        {
        }

        public override void ViewDidLoad ()
        {
            base.ViewDidLoad ();

            swipeView = new SwipeView ();
            swipeView.Frame = new RectangleF (15, 0, View.Frame.Width - 30, 56);
            swipeView.BackgroundColor = UIColor.White;

            View.AddSubview (swipeView);
            swipeView.DataSource = new LettersSwipeViewDataSource ();

            TableView = new UITableView ();
            TableView.SeparatorColor = A.Color_NachoBorderGray;
            TableView.Frame = new RectangleF (0, 56, View.Frame.Width, View.Frame.Height - 56);
            View.AddSubview (TableView);

            InitializeSearchDisplayController ();

            // Manages the search bar & auto-complete table.
            contactTableViewSource = new ContactsTableViewSource ();
            contactTableViewSource.SetOwner (this, SearchDisplayController);

            TableView.Source = contactTableViewSource;

            SearchDisplayController.SearchResultsTableView.Source = contactTableViewSource;

            var searchButton = new UIBarButtonItem (UIBarButtonSystemItem.Search);
            searchButton.TintColor = A.Color_NachoBlue;
            var addContactButton = new UIBarButtonItem (UIBarButtonSystemItem.Add);
            addContactButton.TintColor = A.Color_NachoBlue;

            NavigationItem.RightBarButtonItem = addContactButton;
            NavigationItem.LeftBarButtonItem = searchButton;

            NavigationController.NavigationBar.Translucent = false;

            addContactButton.Clicked += (object sender, EventArgs e) => {
                PerformSegue ("ContactsToContactEdit", new SegueHolder (null));
            };

            searchButton.Clicked += (object sender, EventArgs e) => {
                SearchDisplayController.SearchBar.BecomeFirstResponder ();
            };
        }

        protected void InitializeSearchDisplayController ()
        {
            var sb = new UISearchBar ();

            // creating the controller set up its pointers
            new UISearchDisplayController (sb, this);

            TableView.TableHeaderView = sb;
        }

        public override void ViewWillAppear (bool animated)
        {
            base.ViewWillAppear (animated);
            if (null != this.NavigationController) {
                this.NavigationController.ToolbarHidden = true;
            }
            NcApplication.Instance.StatusIndEvent += StatusIndicatorCallback;

            LoadContacts ();
        }

        public override void ViewWillDisappear (bool animated)
        {
            base.ViewWillDisappear (animated);
            NcApplication.Instance.StatusIndEvent -= StatusIndicatorCallback;
        }

        public void StatusIndicatorCallback (object sender, EventArgs e)
        {
            var s = (StatusIndEventArgs)e;
            if (NcResult.SubKindEnum.Info_ContactSetChanged == s.Status.SubKind) {
                LoadContacts ();
            }
        }

        public override void PrepareForSegue (UIStoryboardSegue segue, NSObject sender)
        {
            base.PrepareForSegue (segue, sender);
        }

        protected void LoadContacts ()
        {
            NachoClient.Util.HighPriority ();
            var contacts = McContact.AllContactsSortedByName ();
            contactTableViewSource.SetContacts (contacts);
            TableView.ReloadData ();
            NachoClient.Util.RegularPriority ();
        }

        /// IContactsTableViewSourceDelegate
        public void PerformSegueForDelegate (string identifier, NSObject sender)
        {
            PerformSegue (identifier, sender);
        }

        /// IContactsTableViewSourceDelegate
        public void ContactSelectedCallback (McContact contact)
        {
            // PerformSegue ("ContactsToContactDetail", new SegueHolder (contact));
        }

        public class LettersSwipeViewDataSource : SwipeViewDataSource
        {
            static List<UIButton> preventGC = new List<UIButton> ();

            public override UIView ViewForItemAtIndex (SwipeView swipeView, int index, UIView view)
            {
                var c = (26 == index) ? '#' : (char)(((int)'A') + index);
                var title = new String (c, 1);
                var button = UIButton.FromType (UIButtonType.RoundedRect);
                button.Frame = new RectangleF (0, 0, 36, 36);
                button.Layer.CornerRadius = 18;
                button.Layer.MasksToBounds = true;
                button.TintColor = UIColor.Clear;
                button.BackgroundColor = A.Color_NachoLightGrayBackground;
                button.SetTitle (title, UIControlState.Normal);
                button.SetTitle (title, UIControlState.Selected);
                button.SetTitleColor (A.Color_114645, UIControlState.Normal);
                button.SetTitleColor (UIColor.White, UIControlState.Selected);
                button.SetTitleColor (UIColor.White, UIControlState.Disabled);
                button.Font = A.Font_AvenirNextDemiBold17;
                preventGC.Add (button);
                button.TouchUpInside += (object sender, EventArgs e) => {
                    var b = (UIButton)sender;
                    foreach (var v in preventGC) {
                        if (v.Selected) {
                            v.Selected = false;
                            v.BackgroundColor = A.Color_NachoLightGrayBackground;
                        }
                    }
                    b.Selected = true;
                    b.BackgroundColor = A.Color_FEBA32;
                };
                return button;
            }

            public override int NumberOfItemsInSwipeView (SwipeView swipeView)
            {
                return 27;
            }

        }

    }
}

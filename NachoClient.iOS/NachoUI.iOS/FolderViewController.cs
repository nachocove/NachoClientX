// This file has been autogenerated from a class added in the UI designer.

using System;
using MonoTouch.Foundation;
using NachoCore;
using NachoCore.Model;
using NachoCore.Utils;
using MonoTouch.UIKit;
using System.Drawing;

namespace NachoClient.iOS
{
    public partial class FolderViewController : NcUITableViewController, IUITableViewDelegate
    {
        McAccount currentAccount { get; set; }

        public void SetAccount (McAccount ncaccount)
        {
            currentAccount = ncaccount;
        }

        HierarchicalFolderTableSource folders;

        public override void ViewDidLoad ()
        {
            base.ViewDidLoad ();
            TableView = new UITableView (View.Bounds, UITableViewStyle.Grouped);
            folders = new HierarchicalFolderTableSource (TableView);
            TableView.DataSource = folders;


            CreateView ();

            // Watch for changes from the back end
            NcApplication.Instance.StatusIndEvent += (object sender, EventArgs e) => {
                var s = (StatusIndEventArgs)e;
                if (NcResult.SubKindEnum.Info_FolderSetChanged == s.Status.SubKind) {
                    folders.Refresh ();
                    this.TableView.ReloadData ();
                }
            };
        }

        public override void ViewWillAppear (bool animated)
        {
            base.ViewWillAppear (animated);
            if (null != this.NavigationController) {
                this.NavigationController.ToolbarHidden = true;
            }
            folders.Refresh ();
            this.TableView.ReloadData ();

            ConfigureView ();
        }

        protected void CreateView ()
        {
            var addButton = new UIBarButtonItem (UIBarButtonSystemItem.Add);
            addButton.TintColor = A.Color_NachoBlue;
            NavigationItem.RightBarButtonItems = new UIBarButtonItem[] { addButton };

            UIView folderHeaderView = new UIView (new RectangleF (0, 0, TableView.Frame.Width, 84));
            folderHeaderView.BackgroundColor = A.Color_NachoBackgroundGray;

            UILabel defaultsLabel = new UILabel (new RectangleF (15, folderHeaderView.Frame.Height - 24, 160, 20));
            defaultsLabel.Text = "DEFAULT FOLDERS";
            defaultsLabel.Font = A.Font_AvenirNextRegular12;
            defaultsLabel.TextColor = A.Color_NachoIconGray;
            folderHeaderView.Add (defaultsLabel);

            // Stylize TableView
            TableView.SeparatorColor = A.Color_NachoBorderGray;
            UISearchBar sb = new UISearchBar (new RectangleF (0, 0, TableView.Frame.Width, 44));
            sb.BarTintColor = A.Color_NachoLightGrayBackground;
            sb.TintColor = A.Color_NachoIconGray;
            sb.Placeholder = "Search Folders";
            NSString x = new NSString ("_searchField");
            UITextField txtField = (UITextField)sb.ValueForKey (x);
            txtField.BackgroundColor = UIColor.White;
            folderHeaderView.Add (sb);
            TableView.TableHeaderView = folderHeaderView;
            TableView.BackgroundColor = A.Color_NachoBackgroundGray;

            // Initially let's hide the search controller
            //TableView.SetContentOffset (new PointF (0.0f, 44.0f), false);
        }

        protected void ConfigureView ()
        {

        }

        public override void PrepareForSegue (UIStoryboardSegue segue, NSObject sender)
        {
            if (segue.Identifier == "FolderToMessageList") {
                var msgview = (MessageListViewController)segue.DestinationViewController; //our destination
                var source = TableView.DataSource as HierarchicalFolderTableSource;
                var rowPath = TableView.IndexPathForSelectedRow;
                var folder = source.GetFolder (rowPath);
                var messageList = new NachoEmailMessages (folder);
                msgview.SetEmailMessages (messageList);
                return;
            }

            if (segue.Identifier.Equals ("SegueToNachoNow")) {
                // Nothing to do
                return;
            }

            Log.Info (Log.LOG_UI, "Unhandled segue identifer {0}", segue.Identifier);
            NcAssert.CaseError ();

        }

        public FolderViewController (IntPtr handle) : base (handle)
        {
        }
    }
}

// This file has been autogenerated from a class added in the UI designer.

using System;
using CoreGraphics;

using Foundation;
using UIKit;

using NachoCore;
using NachoCore.Model;
using NachoCore.Utils;
using NachoClient;

namespace NachoClient.iOS
{
    public partial class SwitchAccountViewController : NcUIViewController, AccountTypeViewControllerDelegate, AccountCredentialsViewControllerDelegate, AccountSyncingViewControllerDelegate, ThemeAdopter
    {

        public SwitchAccountView SwitchAccountView { get; private set; }
        UINavigationController AddAccountNavigationController;
        public Action<McAccount> CreatedAccount;

        public SwitchAccountViewController () : base ()
        {
        }

        UIStoryboard _AccountStoryboard;
        UIStoryboard AccountStoryboard {
            get {
                if (_AccountStoryboard == null) {
                    _AccountStoryboard = UIStoryboard.FromName ("AccountCreation", null);
                }
                return _AccountStoryboard;
            }
        }

        public override void LoadView ()
        {
            View = SwitchAccountView = new SwitchAccountView (new CGRect(0.0f, 0.0f, 300.0f, 300.0f));
            SwitchAccountView.AddAccount = AddAccount;
            AdoptTheme (Theme.Active);
        }

        public void Cleanup ()
        {
            SwitchAccountView.AddAccount = null;
            SwitchAccountView.Cleanup ();
        }

        #region Theme

        private Theme adoptedTheme;

        public void AdoptTheme (Theme theme)
        {
            if (theme != adoptedTheme) {
                adoptedTheme = theme;
                SwitchAccountView.AdoptTheme (theme);
            }
        }

        #endregion

        public void AddAccount ()
        {
            var vc = (AccountTypeViewController)AccountStoryboard.InstantiateViewController ("AccountTypeViewController");
            using (var image = UIImage.FromBundle ("modal-close")) {
                vc.NavigationItem.LeftBarButtonItem = new UIBarButtonItem (image, UIBarButtonItemStyle.Plain, (object sender, EventArgs e) => {
                    DismissViewController(true, () => {
                        AddAccountNavigationController = null;
                    });
                });
            }
            vc.AccountDelegate = this;
            AddAccountNavigationController = new UINavigationController (vc);
            PresentViewController (AddAccountNavigationController, true, null);
        }

        public void AccountTypeViewControllerDidSelectService (AccountTypeViewController vc, McAccount.AccountServiceEnum service)
        {
            var credentialsViewController = vc.SuggestedCredentialsViewController (service);
            credentialsViewController.Service = service;
            credentialsViewController.AccountDelegate = this;
            AddAccountNavigationController.PushViewController (credentialsViewController, true);
        }

        public void AccountCredentialsViewControllerDidValidateAccount (AccountCredentialsViewController vc, McAccount account)
        {
            var syncingViewController = (AccountSyncingViewController)AccountStoryboard.InstantiateViewController ("AccountSyncingViewController");
            syncingViewController.AccountDelegate = this;
            syncingViewController.Account = account;
            BackEnd.Instance.Start (syncingViewController.Account.Id);
            AddAccountNavigationController.PushViewController (syncingViewController, true);
        }

        public void AccountSyncingViewControllerDidComplete (AccountSyncingViewController vc)
        {
            CreatedAccount (vc.Account);
            AddAccountNavigationController = null;
        }
    }

}

// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using NachoCore.Brain;
using CoreGraphics;
using NachoCore.Utils;

namespace NachoClient.iOS
{
    public partial class IntentSelectionViewController : NcUIViewController, INachoIntentChooser
    {
        protected const float X_INDENT = 30;

        INachoIntentChooserParent owner;
        INachoDateControllerParent dateOwner;

        public IntentSelectionViewController() : base ()
        {
        }

        public IntentSelectionViewController (IntPtr handle) : base (handle)
        {

        }

        public override UIStatusBarStyle PreferredStatusBarStyle ()
        {
            return UIStatusBarStyle.LightContent;
        }

        public void SetOwner (INachoIntentChooserParent owner)
        {
            this.owner = owner;
        }

        public void SetDateControllerOwner (INachoDateControllerParent dateOwner)
        {
            this.dateOwner = dateOwner;
        }

        public void DismissIntentChooser (bool animated, Action action)
        {
            DismissViewController (false, null);
        }

        public override void ViewDidLoad ()
        {
            base.ViewDidLoad ();
            CreateView ();
        }

        public void CreateView ()
        {
            UIView contentView = new UIView (View.Frame);
            contentView.BackgroundColor = A.Color_NachoGreen;

            var navBar = new UINavigationBar (new CGRect (0, 20, View.Frame.Width, 44));
            navBar.BarStyle = UIBarStyle.Default;
            navBar.Opaque = true;
            navBar.Translucent = false;

            var navItem = new UINavigationItem ("Message Intent");
            using (var image = UIImage.FromBundle ("modal-close")) {
                var dismissButton = new NcUIBarButtonItem (image, UIBarButtonItemStyle.Plain, null);
                dismissButton.AccessibilityLabel = "Dismiss";
                dismissButton.Clicked += (object sender, EventArgs e) => {
                    DismissViewController (true, null);
                };
                navItem.LeftBarButtonItem = dismissButton;
            }
            navBar.Items = new UINavigationItem[] { navItem };

            contentView.AddSubview (navBar);
            var yOffset = 64;

            Util.AddHorizontalLine (0, yOffset, contentView.Frame.Width, UIColor.LightGray, contentView);
            yOffset += 2;

            var messageIntentList = NcMessageIntent.GetIntentList ();
            var tableView = new UITableView (new CGRect (X_INDENT, yOffset, View.Frame.Width - (2 * X_INDENT), 44 * messageIntentList.Count));
            tableView.Source = new MessageIntentSource (this);
            tableView.BackgroundColor = A.Color_NachoGreen;
            tableView.ScrollEnabled = false;
            tableView.AccessibilityLabel = "Intent selection";
            contentView.AddSubview (tableView);

            View.AddSubview (contentView);
        }

        public void SelectMessageIntent (NcMessageIntent.MessageIntent messageIntent)
        {
            if (null != owner) {
                owner.SelectMessageIntent (messageIntent);
            }
            if (messageIntent.dueDateAllowed) {
                var priorityViewController = new MessagePriorityViewController ();
                priorityViewController.Setup (dateOwner, null, NcMessageDeferral.MessageDateType.Intent);
                priorityViewController.SetIntentSelector (this);
                PresentViewController (priorityViewController, true, null);
            } else {
                DismissViewController (true, null);
            }
        }

        protected class MessageIntentSource : UITableViewSource
        {
            IntentSelectionViewController owner;

            public MessageIntentSource (IntentSelectionViewController owner)
            {
                this.owner = owner;
            }

            public override nint NumberOfSections (UITableView tableView)
            {
                return 1;
            }

            public override nint RowsInSection (UITableView tableView, nint section)
            {
                return NcMessageIntent.GetIntentList ().Count;
            }

            public override UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath)
            {
                string cellIdentifier = "MessageIntentCellIdentifier";

                var cell = tableView.DequeueReusableCell (cellIdentifier);
                if (null == cell) {
                    cell = new UITableViewCell (UITableViewCellStyle.Default, cellIdentifier);
                    cell.BackgroundColor = A.Color_NachoGreen;
                    cell.TextLabel.TextColor = UIColor.White;
                    cell.TextLabel.Font = A.Font_AvenirNextRegular14;
                    using (var image = UIImage.FromBundle ("icn-defer")) {
                        cell.AccessoryView = new UIImageView (image);
                    }
                }

                var messageIntent = NcMessageIntent.GetIntentList () [indexPath.Row];
                cell.TextLabel.Text = messageIntent.text;
                cell.AccessoryView.Hidden = !messageIntent.dueDateAllowed;
                return cell;
            }

            public override void RowSelected (UITableView tableView, NSIndexPath indexPath)
            {
                var cell = tableView.CellAt (indexPath);
                cell.Selected = false;

                var messageIntent = NcMessageIntent.GetIntentList () [indexPath.Row];
                if (null != owner) {
                    owner.SelectMessageIntent (messageIntent);
                }
            }

        }
    }
}

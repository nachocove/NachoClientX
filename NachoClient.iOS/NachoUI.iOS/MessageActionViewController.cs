// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using NachoCore;
using NachoCore.Model;

namespace NachoClient.iOS
{
    public partial class MessageActionViewController : BlurryViewController, IUITableViewDelegate, INachoMessageEditor
    {
        public McEmailMessageThread thread;
        protected INachoMessageEditorParent owner;
        protected INachoFolders folders = null;

        public MessageActionViewController (IntPtr handle) : base (handle)
        {
        }

        public void SetOwner(INachoMessageEditorParent o)
        {
            owner = o;
        }

        public void DismissMessageEditor (bool animated, NSAction action)
        {
            owner = null;
        }

        public override void ViewDidLoad ()
        {
            base.ViewDidLoad ();

            dismissButton.TouchUpInside += (object sender, EventArgs e) => {
                DismissViewController (true, null);
            };

            folderTableView.Delegate = new FolderTableDelegate (this);
            folderTableView.BackgroundColor = UIColor.Clear;
        }

        public override void ViewWillAppear (bool animated)
        {
            base.ViewWillAppear (animated);

            var folderSource = new FolderTableSource ();
            folderSource.cellTextColor = UIColor.White;
            folderTableView.DataSource = folderSource;
        }

        protected class FolderTableDelegate : UITableViewDelegate
        {
            MessageActionViewController owner = null;

            public FolderTableDelegate(MessageActionViewController o)
            {
                owner = o;
            }

            public override void RowSelected(UITableView tableView, NSIndexPath indexPath)
            {
                var folderSource = (FolderTableSource)tableView.DataSource;
                var folder = folderSource.getFolder (indexPath);
                foreach (var message in owner.thread) {
                    BackEnd.Instance.MoveEmailCmd (message.AccountId, message.Id, folder.Id);
                }
                var o = owner;
                owner = null;
                o.DismissMessageEditor (true, null);
            }
        }
    }
}

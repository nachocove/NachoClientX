// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using NachoCore;
using NachoCore.Model;
using System.Drawing;

namespace NachoClient.iOS
{
    public partial class MessageActionViewController : BlurryViewController, IUITableViewDelegate, INachoFolderChooser
    {
        protected object cookie;
        protected INachoFolderChooserParent owner;
        protected INachoFolders folders = null;

        public MessageActionViewController (IntPtr handle) : base (handle)
        {
        }

        public void SetOwner (INachoFolderChooserParent owner, object cookie)
        {
            this.owner = owner;
            this.cookie = cookie;
        }

        public void DismissFolderChooser (bool animated, NSAction action)
        {
            owner = null;
            cookie = null;
            DismissViewController (animated, action);
        }

        public override void ViewDidLoad ()
        {
            base.ViewDidLoad ();

            dismissButton.TouchUpInside += (object sender, EventArgs e) => {
                DismissViewController (true, null);
            };

            folderTableView.Delegate = new FolderTableDelegate (this);
            folderTableView.BackgroundColor = UIColor.Clear;
        }

        public override void ViewWillAppear (bool animated)
        {
            base.ViewWillAppear (animated);

            float frameHeight = View.Frame.Height - 80; //40 px indent top/bottom
            float frameWidth = View.Frame.Width - 50;   //25 px indent l/r sides
            float windowX = (View.Frame.Width - frameWidth) / 2;
            float windowY = (View.Frame.Height - frameHeight) / 2;

            dismissButton.SetTitle ("", UIControlState.Normal);

            ActionView actionView = new ActionView (new RectangleF (windowX, windowY, frameWidth, frameHeight));
            actionView.SetOwner (this);
            actionView.setTableViewDelegate (new FolderTableDelegate (this));
            actionView.BackgroundColor = UIColor.White;
            actionView.Layer.CornerRadius = 6.0f;
            actionView.AddMoveMessageLabel (80, 15);
            actionView.AddLine (44, frameWidth);
            actionView.AddEscapeButton (10);
            actionView.AddFolderTableView ();
            View.AddSubview (actionView);
        }

        public void FolderSelected (McFolder folder)
        {
            owner.FolderSelected (this, folder, cookie);
        }

        protected class FolderTableDelegate : UITableViewDelegate
        {
            MessageActionViewController owner = null;

            public FolderTableDelegate (MessageActionViewController owner)
            {
                this.owner = owner;
            }

            public override void RowSelected (UITableView tableView, NSIndexPath indexPath)
            {
                var folderSource = (HierarchicalFolderTableSource)tableView.DataSource;
                var folder = folderSource.GetFolder (indexPath);
                owner.FolderSelected (folder);
            }
        }
    }
}

// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Drawing;
using System.Collections.Generic;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using UIImageEffectsBinding;
using MonoTouch.CoreGraphics;
using NachoCore.Brain;
using NachoCore.Model;

namespace NachoClient.iOS
{
    public partial class QuickResponseViewController : NcUIViewController
	{
        MessageComposeViewController owner;
        protected float yOffset;
        protected NcQuickResponse ncQuick;
        protected McEmailMessage emailMessage;

        protected const float X_INDENT = 30;

		public QuickResponseViewController (IntPtr handle) : base (handle)
		{

		}

        public override void ViewDidLoad ()
        {
            base.ViewDidLoad ();
            CreateView ();
        }

        public QuickResponseViewController (NcQuickResponse.QRTypeEnum whatType, ref McEmailMessage emailMessage)
        {
            ncQuick = new NcQuickResponse (whatType);
            this.emailMessage = emailMessage;
        }

        public void SetProperties (NcQuickResponse.QRTypeEnum whatType, ref McEmailMessage emailMessage)
        {
            ncQuick = new NcQuickResponse (whatType);
            this.emailMessage = emailMessage;
        }

        public void SetOwner (MessageComposeViewController owner)
        {
            this.owner = owner;
        }

        public void CreateView ()
        {
            UIView qrView = new UIView (View.Frame);
            qrView.BackgroundColor = A.Color_NachoGreen;

            yOffset = 30;

            UILabel quickMessageLabel = new UILabel (new RectangleF (qrView.Frame.Width / 2 - 75, yOffset, 150, 25));
            quickMessageLabel.Text = "Quick Messages";
            quickMessageLabel.TextAlignment = UITextAlignment.Center;
            quickMessageLabel.Font = A.Font_AvenirNextDemiBold17;
            quickMessageLabel.TextColor = UIColor.White;
            qrView.Add (quickMessageLabel);

            UIButton dismissView = new UIButton (new RectangleF (X_INDENT, yOffset, 25, 25));
            dismissView.SetImage (UIImage.FromBundle ("modal-close"), UIControlState.Normal);
            dismissView.TouchUpInside += (object sender, EventArgs e) => {
                DismissViewController(true, null);
            };
            qrView.Add (dismissView);

            yOffset = quickMessageLabel.Frame.Bottom + 16;

            Util.AddHorizontalLine (0, yOffset, qrView.Frame.Width, UIColor.LightGray, qrView);

            yOffset += 2;

            int curItem = 0;
            foreach (var response in ncQuick.GetResponseList()) {
                curItem++;
                UIButton quickButton = new UIButton (new RectangleF (X_INDENT, yOffset, qrView.Frame.Width - 30, 40));
                quickButton.BackgroundColor = A.Color_NachoGreen;
                quickButton.SetTitle (response.body, UIControlState.Normal);
                quickButton.SetTitleColor (UIColor.White, UIControlState.Normal);
                quickButton.Font = A.Font_AvenirNextDemiBold14;
                quickButton.HorizontalAlignment = UIControlContentHorizontalAlignment.Left;
                quickButton.TouchUpInside += (object sender, EventArgs e) => {
                    ncQuick.CreateQuickResponse (response, ref emailMessage);
                    if(null != response.intent){
                        if(null == owner.messageIntent){
                            owner.messageIntent = new NcMessageIntent();
                        }
                        owner.messageIntent.SetType(response.intent);
                        owner.messageIntent.SetMessageIntent(ref emailMessage);
                        owner.PopulateMessageFromSelectedIntent(MessageDeferralType.None);
                    } else {
                        if(null != owner.messageIntent){
                            owner.messageIntent.SetType(NcMessageIntent.NONE_INTENT);
                            owner.messageIntent.SetMessageIntent(ref emailMessage);
                            owner.PopulateMessageFromSelectedIntent(MessageDeferralType.None);
                        }
                    }
                    owner.PopulateMessageFromQR (ncQuick.whatType);
                    DismissViewController(true, null);
                };
                qrView.Add (quickButton);
                Util.AddHorizontalLine (X_INDENT, quickButton.Frame.Bottom, View.Frame.Width - X_INDENT, UIColor.LightGray, qrView);
                yOffset = quickButton.Frame.Bottom + 1;
            }
            this.Add (qrView);
        }

	}
}

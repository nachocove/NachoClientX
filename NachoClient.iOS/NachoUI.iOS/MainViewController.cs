// This file has been autogenerated from a class added in the UI designer.

using System;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using SWRevealViewControllerBinding;
using NachoCore.Utils;

namespace NachoClient.iOS
{
    public partial class MainViewController : SWRevealViewController
    {
        public MainViewController (IntPtr handle) : base (handle)
        {
            Log.Info (Log.LOG_UI, "MainViewController constructor");
        }

        public override void ViewDidLoad ()
        {
            base.ViewDidLoad ();
            Delegate = new SWRevealDelegate ();
        }

        public class SWRevealDelegate : SWRevealViewControllerDelegate
        {
            public override void WillMoveToPosition (SWRevealViewController revealController, FrontViewPosition position)
            {
                if (SWRevealViewControllerBinding.FrontViewPosition.Left == revealController.FrontViewPosition) {
                    var lockingView = new UIView ();
                    lockingView.Alpha = 0.5f;
                    lockingView.BackgroundColor = UIColor.Black;
                    lockingView.TranslatesAutoresizingMaskIntoConstraints = false;
                    var tap = new UITapGestureRecognizer (revealController, new MonoTouch.ObjCRuntime.Selector ("revealToggle:"));
                    lockingView.AddGestureRecognizer (tap);
                    lockingView.AddGestureRecognizer (revealController.PanGestureRecognizer);
                    lockingView.Tag = 1000;
                    revealController.FrontViewController.View.AddSubview (lockingView);
                    revealController.FrontViewController.View.BringSubviewToFront (lockingView);
                    NSDictionary viewsDictionary = new NSDictionary ("lockingView", lockingView);
                    revealController.FrontViewController.View.AddConstraints (NSLayoutConstraint.FromVisualFormat ("|[lockingView]|", 0, null, viewsDictionary));
                    revealController.FrontViewController.View.AddConstraints (NSLayoutConstraint.FromVisualFormat ("V:|[lockingView]|", 0, null, viewsDictionary));
                    lockingView.SizeToFit ();
                } else {
                    var lockingView = revealController.FrontViewController.View.ViewWithTag (1000);
                    if (null != lockingView) {
                        lockingView.RemoveFromSuperview ();
                    }
                }
            }
        }
    }
}
